<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace命名空间，作用就是对SQL进行分类化管理，可以理解成SQL隔离
注意使用mapper代理方法开发，namespace有特殊的作用-->
<mapper namespace="test">
    <!--
    注意：使用#{}表示占位符，这条SQL在mybatis的底层就会变成预编译SQL，不会有SQL注入的问题
         使用${}就只是简单直接拼接SQL，会有SQL注入的风险，所以不建议使用
    -->
    <!--
    id：标识映射文件中的SQL，也称为statement的id，因为在mybatis的底层会将SQL语句封装到mappedStatement中
    paramter：输入参数的类型
    #{}：表示一个占位符
    #{id}：其中的id表示接收输入的参数，参数的名称就是id，如果输入的参数是简单类型，#{}中的参数名称可以任意
    resultType：输出结果的单条记录所映射的Java类型
    -->
    <select id="findUserById" parameterType="int" resultType="com.test.bean.User">
            SELECT * FROM USER WHERE id=#{id};
    </select>

    <!--
    ${}：表示拼接SQL字符串，将接收到的参数直接拼接到SQL字符串中
    注意：使用${}拼接字符串，可能会引起SQL注入，所以不建议使用
    ${value}：接收参数的内容，如果接收的是简单类型，这里的变量名只能是value，和#{}不一样
    -->
    <select id="findUserByName" parameterType="String" resultType="com.test.bean.User">
          SELECT * FROM USER WHERE USERNAME LIKE '%${value}%';
    </select>

    <insert id="insertUser" parameterType="com.test.bean.User">
        <!--
        查询新插入数据的主键，并且将值赋值到User对象的id属性
        keyProperty：将查询到的返回值插入到输入参数类型对象的哪个属性
        resultType：主键的类型
        order：SELECT LAST_INSERT_ID()语句执行的顺序，是在INSERT之前还是之后
        -->
        <selectKey keyProperty="id" resultType="Integer" order="AFTER">
            <!-- 只适用于自增主键 -->
            SELECT LAST_INSERT_ID()
        </selectKey>

        INSERT INTO USER (USERNAME, SEX, BIRTHDAY, ADDRESS) VALUES (#{username}, #{sex}, #{birthday}, #{address})
    </insert>

    <insert id="insertUser1" parameterType="com.test.bean.User">
        <!--
           利用MySQL的UUID()生成主键（长度是36）
           执行过程：
           在执行INSERT语句之前，用SELECT UUID()生成主键，插入到输入参数类型对象的id属性中，接着在执行INSERT的时候像其他字段一样取出并插入
         -->
        <selectKey keyProperty="id" resultType="String" order="BEFORE">
            SELECT UUID()
        </selectKey>

        INSERT INTO user1 (ID, USERNAME) VALUES (#{id}, #{username})
    </insert>
</mapper>
